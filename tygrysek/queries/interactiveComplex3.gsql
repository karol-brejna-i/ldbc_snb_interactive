CREATE QUERY interactiveComplex3(VERTEX<Person> personId, STRING country1, STRING country2, DATETIME startDate, INT duration) SYNTAX v2 {

    TYPEDEF TUPLE<INT personId, STRING personFirstName, STRING personLastName, INT xCount, INT yCount, INT xyCount> msgStats;
    HeapAccum<msgStats>(20, xCount DESC, personId ASC) @@result;
    SumAccum<int> @xCount, @yCount;
    OrAccum<BOOL> @selected, @selected2;
    datetime endDate;
    endDate = datetime_add(startDate, INTERVAL duration DAY);

    S = { personId };
    P =
        SELECT p
            FROM S:s -(KNOWS*1..2)- Person:p
        WHERE p != personId
            ACCUM p.@selected += true;

    P =
        SELECT p
            FROM Country:cp -(<IS_PART_OF.<IS_LOCATED_IN)- Person:p
        WHERE cp.name != country1 AND cp.name != country2 AND p.@selected
            ACCUM p.@selected2 += true;

    P1 =
        SELECT p
            FROM Country:cm -(<IS_LOCATED_IN)- (Post|Comment):m -(HAS_CREATOR>)- Person:p
        WHERE cm.name == country1 AND m.creationDate >= startDate AND m.creationDate < endDate AND p.@selected2
            PER(m,p)
            ACCUM p.@xCount += 1;

    P2 =
        SELECT p
            FROM Country:cm -(<IS_LOCATED_IN)- (Post|Comment):m -(HAS_CREATOR>)- Person:p
        WHERE cm.name == country2 AND m.creationDate >= startDate AND m.creationDate < endDate AND p.@selected2
            PER(m,p)
            ACCUM p.@yCount += 1;

    P = P1 INTERSECT P2;
    P =
        SELECT p FROM P:p
        ACCUM @@result += msgStats(p.id, p.firstName, p.lastName, p.@xCount, p.@yCount, (p.@xCount + p.@yCount));

    PRINT @@result;
}