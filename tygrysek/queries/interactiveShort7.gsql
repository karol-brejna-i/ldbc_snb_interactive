// IS7. Replies of a message
// IS7. query description is on page 63 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
/*
   Given a Message, retrieve the (1-hop) Comments that reply to it.
   In addition, return a boolean flag knows indicating if the author of the reply (replyAuthor) knows
   the author of the original message (messageAuthor). If author is same as original author, return
   False for knows flag.
*/

CREATE OR REPLACE DISTRIBUTED QUERY interactiveShort7(STRING messageId) SYNTAX v2 {
  TYPEDEF TUPLE<INT commentId, STRING commentContent, DATETIME commentCreationDate,
    INT replyAuthorId, STRING replyAuthorFirstName,
    STRING replyAuthorLastName, BOOL replyAuthorKnowsOriginalMessageAuthor> reply;

  SetAccum<STRING> @@seed;
  SetAccum<vertex<Person>> @@knows;
  HeapAccum<reply>(100, commentCreationDate DESC, replyAuthorId ASC) @@result;

  @@seed += messageId;
  vMessage = to_vertex_set(@@seed, "Comment");
  IF vMessage.size() == 0 THEN
    vMessage = to_vertex_set(@@seed, "Post");
  END;

  // XXX TODO: What if the creator knows nobody? will it still return something?
  P =
    SELECT p
      FROM vMessage:s -(HAS_CREATOR>)- Person -(KNOWS)- Person:p
      PER(p)
      ACCUM @@knows += p;

  // from the specs: Given a Message, retrieve the (1-hop) Comments that reply to it.
  P =
    SELECT p
      FROM vMessage:s -(<REPLY_OF)- Comment:c -(HAS_CREATOR>)- Person:p
      ACCUM @@result += reply(c.id, c.content, c.creationDate, p.id, p.firstName, p.lastName, p IN @@knows);
  PRINT @@result;
}

//RUN QUERY is7(65970697666575)

//RUN QUERY is6(1168231255724) -- comment
//RUN QUERY is6(137439104673)  -- message
//RUN QUERY is6(343597583247)  -- message with imageFile
// 1099511760606 -- comment with 3 replies